#!/usr/bin/env node
// -*- mode: javascript -*-
// vi: set ft=javascript :
'use strict';


var minimist = require('minimist');
var argv = require('minimist')(process.argv.slice(2), { boolean: [ 'n' ]});

var filename = argv._[0] || null;
var speed = 1;

function help() {
  var man = [
    "Usage: ttyplay [OPTION] [FILE]",
    "-s SPEED Set speed to SPEED [1.0]",
    "-n       No wait mode"
  ];
  console.log(man.join('\n'));
  process.exit(0);
};

if (argv.s !== undefined ) {
  speed = argv.s;
};

if (argv.n === true ) {
  speed = 0;
};

var fs = require('fs');
var fileStream;

var ttyrec = require('../lib/ttyrec.js');

var ttyplayStream = new ttyrec.PlayStream();
ttyplayStream.setSpeed(speed);


if (typeof process.stdin.setRawMode === 'function') {
  process.stdin.setRawMode(true);
}

if (filename === null) {
  // If we are piped to , set raw mode
  if (process.stdin.isTTY === true) {
    help();
    process.exit(1);
    // We are piped to stdin
  }

  fileStream = process.stdin;
} else {
  fileStream = fs.createReadStream(filename);
}

fileStream.on('error', function(err) {
  console.error('Error reading file', filename, ':' ,err.toString());
  process.exit(-1);
});

fileStream.pipe(ttyplayStream);
ttyplayStream.pipe(process.stdout);
ttyplayStream.on('end', function() {
  process.exit(0);
});

process.stdin.on('data', function (chunk) {
  var code = chunk.toString().charCodeAt(0);

  if (code === 3) { // CTRL-C
    process.exit(0);
  }

  if ((code === 43) || (code === 102)) { // '+' or 'f' (fast)
    speed = speed * 2;
    ttyplayStream.setSpeed(speed);
  };

  if ((code === 45) || (code === 115)) { // '-' or 's' (slow)
    speed = speed / 2;
    ttyplayStream.setSpeed(speed);
  };

  if (code === 49) { // '1'
    speed = 1;
    ttyplayStream.setSpeed(speed);
  };
});
